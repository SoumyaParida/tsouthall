{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/home/soumya/Documents/tasks/profile-website/tsouthall/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/home/soumya/Documents/tasks/profile-website/tsouthall/src/hocs/Page/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tbody { margin: 0; }\\n\\t* { box-sizing: border-box; }\\n\\n\\t@font-face {\\n\\t\\tfont-family: 'Lato';\\n\\t\\tsrc: url('/fonts/lato-bold-webfont.woff2') format('woff2'),\\n\\t\\t\\t url('/fonts/lato-bold-webfont.woff') format('woff'),\\n\\t\\t\\t url('/fonts/lato-bold-webfont.ttf') format('truetype');\\n\\t\\tfont-weight: 700, bold;\\n\\t\\tfont-style: normal;\\n\\t}\\n\\t@font-face {\\n\\t\\tfont-family: 'Lato';\\n\\t\\tsrc: url('/fonts/lato-italic-webfont.woff2') format('woff2'),\\n\\t\\t\\t url('/fonts/lato-italic-webfont.woff') format('woff'),\\n\\t\\t\\t url('/fonts/lato-italic-webfont.ttf') format('truetype');\\n\\t\\tfont-weight: 400, normal;\\n\\t\\tfont-style: italic;\\n\\t}\\n\\t@font-face {\\n\\t\\tfont-family: 'Lato';\\n\\t\\tsrc: url('/fonts/lato-light-webfont.woff2') format('woff2'),\\n\\t\\t\\t url('/fonts/lato-light-webfont.woff') format('woff'),\\n\\t\\t\\t url('/fonts/lato-light-webfont.ttf') format('truetype');\\n\\t\\tfont-weight: 300, lighter;\\n\\t\\tfont-style: normal;\\n\\t}\\n\\t@font-face {\\n\\t\\tfont-family: 'Lato';\\n\\t\\tsrc: url('/fonts/lato-regular-webfont.woff2') format('woff2'),\\n\\t\\t\\t url('/fonts/lato-regular-webfont.woff') format('woff'),\\n\\t\\t\\t url('/fonts/lato-regular-webfont.ttf') format('truetype');\\n\\t\\tfont-weight: 400, normal;\\n\\t\\tfont-style: normal;\\n\\t}\\n\\t@font-face {\\n\\t\\tfont-family: 'PT Mono';\\n\\t\\tsrc: url('/fonts/pt-mono-webfont.woff2') format('woff2'),\\n\\t\\t\\t url('/fonts/pt-mono-webfont.woff') format('woff'),\\n\\t\\t\\t url('/fonts/pt-mono-webfont.ttf') format('truetype');\\n\\t\\tfont-weight: normal;\\n\\t\\tfont-style: normal;\\n\\t}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState } from 'react';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport HtmlHead from '../../components/HtmlHead';\nimport Sidebar from '../../components/Sidebar';\nimport IllustrationZone from '../../components/IllustrationZone';\nimport Content from '../../components/Content';\nimport theme from '../../theme';\nimport { useResponsiveState } from '../../utils/hooks/useResponsiveState';\nvar GlobalStyles = createGlobalStyle(_templateObject());\n_c = GlobalStyles;\n\nvar Page = function Page(_ref) {\n  _s();\n\n  var children = _ref.children,\n      pageName = _ref.pageName;\n  var isMobile = useResponsiveState();\n\n  var _useState = useState(!isMobile),\n      isSidebarOpened = _useState[0],\n      setSidebarIsOpened = _useState[1];\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(HtmlHead, {\n      pageName: pageName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(IllustrationZone, {\n      pageName: pageName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      pageName: pageName,\n      isSidebarOpen: isSidebarOpened\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(Content, {\n      isOpen: isSidebarOpened,\n      setSidebar: setSidebarIsOpened,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(Page, \"s8FJKkxoCKk3c4XERu5mO/CTofY=\", false, function () {\n  return [useResponsiveState];\n});\n\n_c2 = Page;\nexport default Page;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GlobalStyles\");\n$RefreshReg$(_c2, \"Page\");","map":{"version":3,"sources":["/home/soumya/Documents/tasks/profile-website/tsouthall/src/hocs/Page/index.tsx"],"names":["useState","createGlobalStyle","ThemeProvider","HtmlHead","Sidebar","IllustrationZone","Content","theme","useResponsiveState","GlobalStyles","Page","children","pageName","isMobile","isSidebarOpened","setSidebarIsOpened"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAAaA,QAAb,QAA6B,OAA7B;AACA,SAASC,iBAAT,EAA4BC,aAA5B,QAAiD,mBAAjD;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,KAAP,MAAiC,aAAjC;AAEA,SAASC,kBAAT,QAAmC,sCAAnC;AAEA,IAAMC,YAAY,GAAGR,iBAAH,mBAAlB;KAAMQ,Y;;AA8CN,IAAMC,IAAoC,GAAG,SAAvCA,IAAuC,OAA4B;AAAA;;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACxE,MAAMC,QAAQ,GAAGL,kBAAkB,EAAnC;;AADwE,kBAE1BR,QAAQ,CAAU,CAACa,QAAX,CAFkB;AAAA,MAEjEC,eAFiE;AAAA,MAEhDC,kBAFgD;;AAIxE,sBACC,QAAC,aAAD;AAAe,IAAA,KAAK,EAAER,KAAtB;AAAA,4BACC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aADD,eAEC,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEK;AAApB;AAAA;AAAA;AAAA;AAAA,aAFD,eAGC,QAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAEA;AAA5B;AAAA;AAAA;AAAA;AAAA,aAHD,eAIC,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAEA,QAAnB;AAA6B,MAAA,aAAa,EAAEE;AAA5C;AAAA;AAAA;AAAA;AAAA,aAJD,eAKC,QAAC,OAAD;AAAS,MAAA,MAAM,EAAEA,eAAjB;AAAkC,MAAA,UAAU,EAAEC,kBAA9C;AAAA,gBACEJ;AADF;AAAA;AAAA;AAAA;AAAA,aALD;AAAA;AAAA;AAAA;AAAA;AAAA,WADD;AAWA,CAfD;;GAAMD,I;UACYF,kB;;;MADZE,I;AAiBN,eAAeA,IAAf","sourcesContent":["import { FC, useState } from 'react'\nimport { createGlobalStyle, ThemeProvider } from 'styled-components'\nimport HtmlHead from '../../components/HtmlHead'\nimport Sidebar from '../../components/Sidebar'\nimport IllustrationZone from '../../components/IllustrationZone'\nimport Content from '../../components/Content'\nimport theme, { ThemeType } from '../../theme'\nimport { PageNameType } from '../../constants/pages'\nimport { useResponsiveState } from '../../utils/hooks/useResponsiveState'\n\nconst GlobalStyles = createGlobalStyle`\n\tbody { margin: 0; }\n\t* { box-sizing: border-box; }\n\n\t@font-face {\n\t\tfont-family: 'Lato';\n\t\tsrc: url('/fonts/lato-bold-webfont.woff2') format('woff2'),\n\t\t\t url('/fonts/lato-bold-webfont.woff') format('woff'),\n\t\t\t url('/fonts/lato-bold-webfont.ttf') format('truetype');\n\t\tfont-weight: 700, bold;\n\t\tfont-style: normal;\n\t}\n\t@font-face {\n\t\tfont-family: 'Lato';\n\t\tsrc: url('/fonts/lato-italic-webfont.woff2') format('woff2'),\n\t\t\t url('/fonts/lato-italic-webfont.woff') format('woff'),\n\t\t\t url('/fonts/lato-italic-webfont.ttf') format('truetype');\n\t\tfont-weight: 400, normal;\n\t\tfont-style: italic;\n\t}\n\t@font-face {\n\t\tfont-family: 'Lato';\n\t\tsrc: url('/fonts/lato-light-webfont.woff2') format('woff2'),\n\t\t\t url('/fonts/lato-light-webfont.woff') format('woff'),\n\t\t\t url('/fonts/lato-light-webfont.ttf') format('truetype');\n\t\tfont-weight: 300, lighter;\n\t\tfont-style: normal;\n\t}\n\t@font-face {\n\t\tfont-family: 'Lato';\n\t\tsrc: url('/fonts/lato-regular-webfont.woff2') format('woff2'),\n\t\t\t url('/fonts/lato-regular-webfont.woff') format('woff'),\n\t\t\t url('/fonts/lato-regular-webfont.ttf') format('truetype');\n\t\tfont-weight: 400, normal;\n\t\tfont-style: normal;\n\t}\n\t@font-face {\n\t\tfont-family: 'PT Mono';\n\t\tsrc: url('/fonts/pt-mono-webfont.woff2') format('woff2'),\n\t\t\t url('/fonts/pt-mono-webfont.woff') format('woff'),\n\t\t\t url('/fonts/pt-mono-webfont.ttf') format('truetype');\n\t\tfont-weight: normal;\n\t\tfont-style: normal;\n\t}\n`\n\nconst Page: FC<{ pageName: PageNameType }> = ({ children, pageName }) => {\n\tconst isMobile = useResponsiveState()\n\tconst [isSidebarOpened, setSidebarIsOpened] = useState<boolean>(!isMobile)\n\n\treturn (\n\t\t<ThemeProvider theme={theme as ThemeType}>\n\t\t\t<GlobalStyles />\n\t\t\t<HtmlHead pageName={pageName} />\n\t\t\t<IllustrationZone pageName={pageName} />\n\t\t\t<Sidebar pageName={pageName} isSidebarOpen={isSidebarOpened} />\n\t\t\t<Content isOpen={isSidebarOpened} setSidebar={setSidebarIsOpened}>\n\t\t\t\t{children}\n\t\t\t</Content>\n\t\t</ThemeProvider>\n\t)\n}\n\nexport default Page\n"]},"metadata":{},"sourceType":"module"}