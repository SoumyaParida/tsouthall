{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/soumya/Documents/tasks/profile-website/tsouthall/src/components/AnimatedInText/index.tsx\";\nimport styled from 'styled-components';\nimport { useClientIsReady } from '../../utils/hooks/useClientIsReady';\nconst AnimatedInSpan = styled.span`\n\t& > * {\n\t\tdisplay: block;\n\t\ttransform: translateY(${({\n  clientIsReady\n}) => clientIsReady ? 0 : '30px'});\n\t\topacity: ${({\n  clientIsReady\n}) => clientIsReady ? 1 : 0};\n\t\ttransition-delay: ${({\n  timeout\n}) => timeout}ms, ${({\n  timeout\n}) => timeout}ms;\n\t\ttransition-property: opacity, transform;\n\t\ttransition-duration: 6000ms, 400ms;\n\t\ttransition-timing-function: cubic-bezier(0, 1, 0.37, 0.98), cubic-bezier(0, 1, 0.37, 0.98);\n\t}\n\t& > strong {\n\t\tcolor: ${({\n  theme\n}) => theme.blue};\n\t\tfont-weight: 900;\n\t}\n`;\n\nconst AnimatedInText = ({\n  children,\n  timeout\n}) => {\n  const clientIsReady = useClientIsReady();\n  return /*#__PURE__*/_jsxDEV(AnimatedInSpan, {\n    timeout: timeout,\n    clientIsReady: clientIsReady,\n    children: typeof children === 'string' ? /*#__PURE__*/_jsxDEV(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: children\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n};\n\nexport default AnimatedInText;","map":{"version":3,"sources":["/home/soumya/Documents/tasks/profile-website/tsouthall/src/components/AnimatedInText/index.tsx"],"names":["styled","useClientIsReady","AnimatedInSpan","span","clientIsReady","timeout","theme","blue","AnimatedInText","children","__html"],"mappings":";;AACA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,gBAAT,QAAiC,oCAAjC;AAUA,MAAMC,cAAc,GAAGF,MAAM,CAACG,IAAyB;AACvD;AACA;AACA,0BAA0B,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwBA,aAAa,GAAG,CAAH,GAAO,MAAQ;AAC9E,aAAa,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAwBA,aAAa,GAAG,CAAH,GAAO,CAAG;AAC5D,sBAAsB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiBA,OAAQ,OAAM,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAiBA,OAAQ;AAC9E;AACA;AACA;AACA;AACA;AACA,WAAW,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,IAAK;AACrC;AACA;AACA,CAdA;;AAgBA,MAAMC,cAAsC,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYJ,EAAAA;AAAZ,CAAD,KAA2B;AACzE,QAAMD,aAAa,GAAGH,gBAAgB,EAAtC;AAEA,sBACC,QAAC,cAAD;AAAgB,IAAA,OAAO,EAAEI,OAAzB;AAAkC,IAAA,aAAa,EAAED,aAAjD;AAAA,cACE,OAAOK,QAAP,KAAoB,QAApB,gBACA;AAAM,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAED;AAAV;AAA/B;AAAA;AAAA;AAAA;AAAA,YADA,GAGAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADD;AASA,CAZD;;AAcA,eAAeD,cAAf","sourcesContent":["import { FC } from 'react'\nimport styled from 'styled-components'\nimport { useClientIsReady } from '../../utils/hooks/useClientIsReady'\n\ninterface AnimatedInTextType {\n\ttimeout: number\n}\n\ninterface AnimatedInSpanType extends AnimatedInTextType {\n\tclientIsReady: boolean\n}\n\nconst AnimatedInSpan = styled.span<AnimatedInSpanType>`\n\t& > * {\n\t\tdisplay: block;\n\t\ttransform: translateY(${({ clientIsReady }) => (clientIsReady ? 0 : '30px')});\n\t\topacity: ${({ clientIsReady }) => (clientIsReady ? 1 : 0)};\n\t\ttransition-delay: ${({ timeout }) => timeout}ms, ${({ timeout }) => timeout}ms;\n\t\ttransition-property: opacity, transform;\n\t\ttransition-duration: 6000ms, 400ms;\n\t\ttransition-timing-function: cubic-bezier(0, 1, 0.37, 0.98), cubic-bezier(0, 1, 0.37, 0.98);\n\t}\n\t& > strong {\n\t\tcolor: ${({ theme }) => theme.blue};\n\t\tfont-weight: 900;\n\t}\n`\n\nconst AnimatedInText: FC<AnimatedInTextType> = ({ children, timeout }) => {\n\tconst clientIsReady = useClientIsReady()\n\n\treturn (\n\t\t<AnimatedInSpan timeout={timeout} clientIsReady={clientIsReady}>\n\t\t\t{typeof children === 'string' ? (\n\t\t\t\t<span dangerouslySetInnerHTML={{ __html: children }} />\n\t\t\t) : (\n\t\t\t\tchildren\n\t\t\t)}\n\t\t</AnimatedInSpan>\n\t)\n}\n\nexport default AnimatedInText\n"]},"metadata":{},"sourceType":"module"}