{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/home/soumya/Documents/tasks/profile-website/tsouthall/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/home/soumya/Documents/tasks/profile-website/tsouthall/src/components/AnimatedInText/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\t& > * {\\n\\t\\tdisplay: block;\\n\\t\\ttransform: translateY(\", \");\\n\\t\\topacity: \", \";\\n\\t\\ttransition-delay: \", \"ms, \", \"ms;\\n\\t\\ttransition-property: opacity, transform;\\n\\t\\ttransition-duration: 6000ms, 400ms;\\n\\t\\ttransition-timing-function: cubic-bezier(0, 1, 0.37, 0.98), cubic-bezier(0, 1, 0.37, 0.98);\\n\\t}\\n\\t& > strong {\\n\\t\\tcolor: \", \";\\n\\t\\tfont-weight: 900;\\n\\t}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from 'styled-components';\nimport { useClientIsReady } from '../../utils/hooks/useClientIsReady';\nvar AnimatedInSpan = styled.span(_templateObject(), function (_ref) {\n  var clientIsReady = _ref.clientIsReady;\n  return clientIsReady ? 0 : '30px';\n}, function (_ref2) {\n  var clientIsReady = _ref2.clientIsReady;\n  return clientIsReady ? 1 : 0;\n}, function (_ref3) {\n  var timeout = _ref3.timeout;\n  return timeout;\n}, function (_ref4) {\n  var timeout = _ref4.timeout;\n  return timeout;\n}, function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.blue;\n});\n_c = AnimatedInSpan;\n\nvar AnimatedInText = function AnimatedInText(_ref6) {\n  _s();\n\n  var children = _ref6.children,\n      timeout = _ref6.timeout;\n  var clientIsReady = useClientIsReady();\n  return /*#__PURE__*/_jsxDEV(AnimatedInSpan, {\n    timeout: timeout,\n    clientIsReady: clientIsReady,\n    children: typeof children === 'string' ? /*#__PURE__*/_jsxDEV(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: children\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, _this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(AnimatedInText, \"JkcaB/W9uTyWTt5PoOlRJWoPej4=\", false, function () {\n  return [useClientIsReady];\n});\n\n_c2 = AnimatedInText;\nexport default AnimatedInText;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AnimatedInSpan\");\n$RefreshReg$(_c2, \"AnimatedInText\");","map":{"version":3,"sources":["/home/soumya/Documents/tasks/profile-website/tsouthall/src/components/AnimatedInText/index.tsx"],"names":["styled","useClientIsReady","AnimatedInSpan","span","clientIsReady","timeout","theme","blue","AnimatedInText","children","__html"],"mappings":";;;;;;;;;;;;;;;;;AACA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,gBAAT,QAAiC,oCAAjC;AAUA,IAAMC,cAAc,GAAGF,MAAM,CAACG,IAAV,oBAGM;AAAA,MAAGC,aAAH,QAAGA,aAAH;AAAA,SAAwBA,aAAa,GAAG,CAAH,GAAO,MAA5C;AAAA,CAHN,EAIP;AAAA,MAAGA,aAAH,SAAGA,aAAH;AAAA,SAAwBA,aAAa,GAAG,CAAH,GAAO,CAA5C;AAAA,CAJO,EAKE;AAAA,MAAGC,OAAH,SAAGA,OAAH;AAAA,SAAiBA,OAAjB;AAAA,CALF,EAKiC;AAAA,MAAGA,OAAH,SAAGA,OAAH;AAAA,SAAiBA,OAAjB;AAAA,CALjC,EAWT;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,IAArB;AAAA,CAXS,CAApB;KAAML,c;;AAgBN,IAAMM,cAAsC,GAAG,SAAzCA,cAAyC,QAA2B;AAAA;;AAAA,MAAxBC,QAAwB,SAAxBA,QAAwB;AAAA,MAAdJ,OAAc,SAAdA,OAAc;AACzE,MAAMD,aAAa,GAAGH,gBAAgB,EAAtC;AAEA,sBACC,QAAC,cAAD;AAAgB,IAAA,OAAO,EAAEI,OAAzB;AAAkC,IAAA,aAAa,EAAED,aAAjD;AAAA,cACE,OAAOK,QAAP,KAAoB,QAApB,gBACA;AAAM,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAED;AAAV;AAA/B;AAAA;AAAA;AAAA;AAAA,aADA,GAGAA;AAJF;AAAA;AAAA;AAAA;AAAA,WADD;AASA,CAZD;;GAAMD,c;UACiBP,gB;;;MADjBO,c;AAcN,eAAeA,cAAf","sourcesContent":["import { FC } from 'react'\nimport styled from 'styled-components'\nimport { useClientIsReady } from '../../utils/hooks/useClientIsReady'\n\ninterface AnimatedInTextType {\n\ttimeout: number\n}\n\ninterface AnimatedInSpanType extends AnimatedInTextType {\n\tclientIsReady: boolean\n}\n\nconst AnimatedInSpan = styled.span<AnimatedInSpanType>`\n\t& > * {\n\t\tdisplay: block;\n\t\ttransform: translateY(${({ clientIsReady }) => (clientIsReady ? 0 : '30px')});\n\t\topacity: ${({ clientIsReady }) => (clientIsReady ? 1 : 0)};\n\t\ttransition-delay: ${({ timeout }) => timeout}ms, ${({ timeout }) => timeout}ms;\n\t\ttransition-property: opacity, transform;\n\t\ttransition-duration: 6000ms, 400ms;\n\t\ttransition-timing-function: cubic-bezier(0, 1, 0.37, 0.98), cubic-bezier(0, 1, 0.37, 0.98);\n\t}\n\t& > strong {\n\t\tcolor: ${({ theme }) => theme.blue};\n\t\tfont-weight: 900;\n\t}\n`\n\nconst AnimatedInText: FC<AnimatedInTextType> = ({ children, timeout }) => {\n\tconst clientIsReady = useClientIsReady()\n\n\treturn (\n\t\t<AnimatedInSpan timeout={timeout} clientIsReady={clientIsReady}>\n\t\t\t{typeof children === 'string' ? (\n\t\t\t\t<span dangerouslySetInnerHTML={{ __html: children }} />\n\t\t\t) : (\n\t\t\t\tchildren\n\t\t\t)}\n\t\t</AnimatedInSpan>\n\t)\n}\n\nexport default AnimatedInText\n"]},"metadata":{},"sourceType":"module"}